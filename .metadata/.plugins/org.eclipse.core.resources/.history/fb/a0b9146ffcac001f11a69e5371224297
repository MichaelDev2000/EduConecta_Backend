package com.educonecta.app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;

@Tag(name = "Controlador para login con JWT", description = "Controlador para login con JWT")
@CrossOrigin(origins = "*")
@RestController
public class AuthController {

	
	@Autowired
	AuthenticationManager authManager;

	public AuthController(AuthenticationManager authManager) {
		super();
		this.authManager = authManager;
		
	}
	
	@Operation(summary="Este endpoint permite loguearnos para obtener el token a traves de JWT")
	@PostMapping(value = "login", produces = MediaType.TEXT_PLAIN_VALUE)
	public ResponseEntity<String> login(@RequestParam("user") String user,
	                                     @RequestParam("pwd") String pwd) {
	    try {
	        Authentication authentication = authManager.authenticate(
	                new UsernamePasswordAuthenticationToken(user, pwd));
	        System.out.println("COntroller Usuario autenticado: " + authentication.getName());
	        System.out.println("COntroller Autoridades: " + authentication.getAuthorities());
	        return new ResponseEntity<>(getToken(authentication), HttpStatus.OK);
	    } catch (AuthenticationException ex) {
	        ex.printStackTrace();
	        System.out.println("Error de autenticaci√≥n: " + ex.getMessage());
	        return new ResponseEntity<>(HttpStatus.UNAUTHORIZED);
	    }
	}
	
	
}
